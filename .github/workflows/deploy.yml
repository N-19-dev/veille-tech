name: Build & Deploy Veille (React + Exports)

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 6 * * 1"   # Lundi 06:00 UTC = 08:00 Paris hiver
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Python: génère export/YYYYwWW + weeks.json ---
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate weekly exports (crawl + LLM + files)
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          WEEK_OFFSET: "-1"              # semaine précédente
        run: |
          echo "=== Crawl + Analyse LLM ==="
          python veille_tech.py --config config.yaml
          python analyze_llm.py --config config.yaml
          echo "=== Export contents ==="
          find export -maxdepth 2 -type f | sed 's/^/  - /' || true

      # --- Node: build du front ---
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: react-newsletter/package-lock.json

      - name: Install Node deps
        working-directory: react-newsletter
        run: npm ci

      # Copie export/ dans le public du front (en suivant les symlinks)
      - name: Copy exports into public (follow symlinks)
        run: |
          set -e
          mkdir -p react-newsletter/public/export
          # copie TOUT export/ en résolvant les symlinks
          cp -RL export/. react-newsletter/public/export/ || true

          # Si latest/ n'existe pas (symlink non suivi), on le recrée depuis la semaine la plus récente
          if [ ! -e "react-newsletter/public/export/latest/ai_summary.md" ]; then
            newest=$(ls -1 react-newsletter/public/export | grep -E '^[0-9]{4}w[0-9]{2}$' | sort | tail -n1)
            if [ -n "$newest" ]; then
              rm -rf react-newsletter/public/export/latest
              cp -R "react-newsletter/public/export/$newest" "react-newsletter/public/export/latest"
            fi
          fi

          echo "== Dump export in public =="
          find react-newsletter/public/export -maxdepth 2 -type f | sed 's/^/  - /'

      # S’assure que 'latest' est un VRAI dossier et non un symlink
      - name: Ensure 'latest' is a real directory
        run: |
          set -e
          if [ -L react-newsletter/public/export/latest ]; then
            rm -f react-newsletter/public/export/latest
          fi
          mkdir -p react-newsletter/public/export/latest
          # Si rien dedans, copie la semaine la plus récente
          if [ -z "$(ls -A react-newsletter/public/export/latest 2>/dev/null)" ]; then
            LATEST_DIR="$(ls -d export/20*w* 2>/dev/null | sort | tail -n 1 || true)"
            if [ -n "$LATEST_DIR" ]; then
              cp -a "$LATEST_DIR"/. react-newsletter/public/export/latest/
            fi
          fi

      # (Optionnel) Affiche vite.config.ts pour vérifier la base
      - name: Show vite.config.ts base
        working-directory: react-newsletter
        run: |
          echo "----- vite.config.ts -----"
          cat vite.config.ts || true
          echo "--------------------------"

      - name: Build React app
        working-directory: react-newsletter
        env:
          # Optionnel si tu as mis la base en dur dans vite.config.ts
          VITE_BASE: /veille-tech/
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: react-newsletter/dist
        
      - name: Check built export presence
        run: |
          echo "== Built dist export =="
          find react-newsletter/dist/export -maxdepth 2 -type f | sed 's/^/  - /' || true

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4